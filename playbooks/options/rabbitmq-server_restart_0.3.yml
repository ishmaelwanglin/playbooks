---
- name: restart rabbitmq, restart openstack service from  controller
  hosts: controller
  gather_facts: no
  serial: 50
  tasks:
  - block:
    - name: < gather node's hostname >
      shell: hostname -s
      register: info
    - set_fact: hostname = info.stdout
###################################################
  - block:
    - name: < 查看服务状态：rabbitmq-server >
      shell: ps -ef | grep rabbitmq-server | grep -v grep
      register: mq_stat
      ignore_errors: True
    - name: < 如果没有 mq进程，则启动rabbitmq-server >
      service: name=rabbitmq-server state=restarted
      when: mq_stat.rc == 1
    - name: < 如果有MQ进程，则杀掉进程rabbitmq-server >
      shell: >
                 ps -ef | grep rabbitmq-server | grep -v grep | awk '{print $2}'| xargs -i kill -9 {}
      register: if_kill
      until: if_kill.rc == 0
      retries: 3
      delay: 1
      when: mq_stat.rc == 0
    - name: < Restart RabbitMQ.server >
      service: name=rabbitmq-server state=restarted
      when: if_kill.rc == 0
    - name: < Display RabbitMQ cluster status >
      shell: rabbitmqctl cluster_status |grep "running_nodes" | egrep -o "node-[[:digit:]]" | wc -l
      register: mqcluster_state
      until: mqcluster_state.stdout == 3
      retries: 5
      delay: 1

    - name: < restart openstack service on controller >
      service: name={{item}} state=restarted
      with_items:
      - openstack-keystone.service
      - openstack-nova-api.service
      - openstack-nova-scheduler.service
      - openstack-nova-conductor.service
      - openstack-nova-consoleauth.service
      - openstack-nova-cert.service
      - openstack-nova-novncproxy.service
      - openstack-nova-objectstore.serivce
      - neutron-server.service
      - openstack-cinder-api.service
      - openstack-cinder-scheduler.service
      - openstack-cinder-volume.service
      - openstack-glance-api.service
      - openstack-glance-registry.service
      - openstack-ceilometer-alarm-notifier.service
      - openstack-ceilometer-api.service
      - openstack-ceilometer-collector.service
      - openstack-ceilometer-notification.service
      - openstack-heat-api-cfg.service
      - openstack-heat-api.service
      - openstack-heat-api-cloudwatch.service

    - name: < crm resource restart >
      shell: crm resource restart rabbitmq-server
      with_items:
      - p_neutron-metadata-agent
      - p_neutron-dhcp-agent
#      - p_neutron-openvswitch-agent
#      - p_neutron-l3-agent
      delegate_to: groups['controller'][0]
      run_once: true
   when: inventory_hostname in groups.controller
##############################################################################
- block:  
  - name: < restart openstack services on compute node >
    service: name={{item}} state=restarted
    with_items:
    - openstack-nova-compute.service
#    - openstack-neutron-agent.service
  when: inventory_hostname in groups.compute
###

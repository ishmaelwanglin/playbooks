#
# (c) Copyright 2015 Hewlett Packard Enterprise Development Company LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

# Install logging server stack
#------------------------------------------------------------------------------
- name: logging-server | install | Install logging server stack
  apt: pkg={{ item }} install_recommends=no state=latest force=yes
  with_items:
    - curl
    - openjdk-7-jre-headless
    - elasticsearch
    - logstash
    - python-passlib
    - elasticsearch-curator
  notify: 
    - restart_logstash
    - restart_elasticsearch

- name: logging-server | install | Update venv Package cache
  install_package: cache=update

- name: logging-server | install | Install Logging venv including Kibana
  install_package: name=logging service=logging state=present activate=act_off
  register: kibana_install
  notify: activate_kibana

- name: logging-server | install | Set logging venv directories
  set_fact: kibana_tarball_dir={{ 'logging' | jar_dir(kibana_install.version) }}

- name: logging-server | install | Register tarball path
  shell: basename `ls -1 {{ kibana_tarball_dir }}/*.{{ kibana_tarball_ext }}` | sed "s/\(.*\).tar.gz/\1/"
  register: kibana_tarball_name

- name: logging-server | install | Extract Kibana tarball
  unarchive: >
    copy=no src={{ kibana_tarball_dir }}/{{ kibana_tarball_name.stdout }}.{{ kibana_tarball_ext }}
    dest={{ kibana_tarball_dir }} creates={{ kibana_tarball_dir }}/{{ kibana_tarball_name.stdout }}

- name: logging-server | install | Register Kibana version
  shell: cat {{ kibana_path }}/README.txt | grep "Kibana [0-9].[0-9]" | sed "s/Kibana \([0-9]\.[0-9]\.[0-9]\).*/\1/"
  register: kibana_version

- name: logging-server | install | Register new Kibana version
  shell: basename `ls -1 {{ kibana_tarball_dir }}/*.{{ kibana_tarball_ext }}` | sed "s/kibana-\(.*\)-linux-x64.tar.gz/\1/"
  register: kibana_new_version

- name: logging-server | install | Wipe old Kibana version if exists
  file: path={{ kibana_path }} state=absent
  when: kibana_version.stdout != kibana_new_version.stdout
  notify: restart_kibana

- name: logging-server | install | Install Kibana from extracted tarball
  command: "{{ item }} creates={{ kibana_path }}"
  with_items:
    - cp -r {{ kibana_tarball_dir }}/{{ kibana_tarball_name.stdout }} /opt
    - mv /opt/{{ kibana_tarball_name.stdout }} {{ kibana_path }}
  when: kibana_version.stdout != kibana_new_version.stdout
  notify: restart_kibana

- name: logging-server | install | Install Kibana prime script
  template: src=prime_kibana.py.j2 dest={{ kibana_path }}/prime_kibana.py mode=0644
  notify: restart_kibana

- name: logging-server | install | Install Kibana systemd unit file
  template: src=kibana.service.j2 dest=/etc/systemd/system/kibana.service mode=0644
  notify: restart_kibana

- name: logging-server | install | Install Logstash systemd unit file
  template: src=logstash.service.j2 dest=/etc/systemd/system/logstash.service mode=0644
  notify: restart_logstash

- name: logging-server | install | Install Elasticsearch systemd unit file
  template: src=elasticsearch.service.j2 dest=/etc/systemd/system/elasticsearch.service mode=0644
  notify: restart_elasticsearch


# Reload systemd and enable services
#------------------------------------------------------------------------------
- name: logging-server | install | Reload systemd to pick up new services
  command: systemctl daemon-reload

- name: logging-server | install | Check elasticsearch service enabled
  stat: path=/etc/systemd/system/multi-user.target.wants/elasticsearch.service
  register: es_enabled

- name: logging-server | install | Configure Elasticsearch to start on boot
  service: name=elasticsearch enabled=yes
  when: not es_enabled.stat.exists
  notify: restart_elasticsearch

- name: logging-server | install | Check logstash service enabled
  stat: path=/etc/systemd/system/multi-user.target.wants/logstash.service
  register: ls_enabled

- name: logging-server | install | Configure Logstash to start on boot
  service: name=logstash enabled=yes
  when: not ls_enabled.stat.exists
  notify: restart_logstash

- name: logging-server | install | Check elasticsearch service enabled
  stat: path=/etc/systemd/system/multi-user.target.wants/kibana.service
  register: ks_enabled

- name: logging-server | install | Configure Kibana to start on boot
  service: name=kibana enabled=yes
  when: not ks_enabled.stat.exists
  notify: restart_kibana
